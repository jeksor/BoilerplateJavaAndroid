<?xml version="1.0"?><!DOCTYPE module PUBLIC
	"-//Puppy Crawl//DTD Check Configuration 1.3//EN"
	"http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
	
	<property name="charset" value="UTF-8" />
	
	<property name="severity" value="error" />
	
	<!-- Checks for Size Violations. -->
	<!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
	<module name="FileLength" />
	
	<module name="TreeWalker">
		<!-- Checks for Annotations. -->
		<!-- See http://checkstyle.sourceforge.net/config_annotation.html -->
		<module name="MissingOverride" />
		
		<!-- Checks for Size Violations. -->
		<!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
		<module name="MethodLength" />
		
		<module name="ParameterNumber" />
		
		<module name="LineLength">
			<property name="max" value="180" />
			<property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
		</module>
		
		<!-- Checks for imports -->
		<!-- See http://checkstyle.sourceforge.net/config_import.html -->
		<module name="AvoidStarImport" />
		
		<module name="IllegalImport" />
		
		<module name="RedundantImport" />
		
		<module name="UnusedImports" />
		
		<!-- Checks for common coding problems -->
		<!-- See http://checkstyle.sourceforge.net/config_coding.html -->
		<module name="EmptyBlock">
			<property name="option" value="TEXT" />
			<property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
		</module>
		
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName" value="expected" />
		</module>
		
		<module name="LeftCurly">
			<property name="maxLineLength" value="100" />
		</module>
		
		<module name="RightCurly">
			<property name="option" value="alone" />
			<property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT" />
		</module>
		
		<module name="RightCurly">
			<property name="option" value="same" />
		</module>
		
		<module name="NoFinalizer" />
		
		<module name="ArrayTypeStyle" />
		
		<module name="ModifierOrder" />
		
		<module name="Indentation">
			<property name="severity" value="warning" />
			<property name="basicOffset" value="8" />
			<property name="braceAdjustment" value="0" />
			<property name="caseIndent" value="8" />
			<property name="throwsIndent" value="8" />
			<property name="lineWrappingIndentation" value="16" />
			<property name="arrayInitIndent" value="4" />
		</module>
		
		<module name="SimplifyBooleanExpression" />
		
		<module name="SimplifyBooleanReturn" />
		
		<module name="HiddenField">
			<property name="ignoreFormat" value="^interactor$" />
			<property name="ignoreConstructorParameter" value="true" />
			<property name="ignoreSetter" value="true" />
			<property name="severity" value="warning" />
		</module>
		
		<module name="IllegalInstantiation" />
		
		<module name="MagicNumber">
			<property name="severity" value="info" />
			<property name="ignoreNumbers" value="-1, 0, 1, 2, 3, 4, 5, 8, 10, 12, 16, 24, 30, 32, 60, 64, 100, 120, 128, 180, 256, 360, 1000" />
		</module>
		
		<module name="MissingSwitchDefault" />
		
		<!-- Checks for whitespace. -->
		<!-- See http://checkstyle.sourceforge.net/config_whitespace.html -->
		<module name="EmptyForInitializerPad" />
		
		<module name="EmptyForIteratorPad" />
		
		<module name="EmptyLineSeparator">
			<property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF" />
		</module>
		
		<module name="GenericWhitespace">
			<message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace." />
			<message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace." />
			<message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace." />
			<message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
		</module>
		
		<module name="MethodParamPad" />
		
		<module name="NoLineWrap" />
		
		<module name="NoWhitespaceAfter">
			<property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
			<property name="allowLineBreaks" value="true" />
		</module>
		
		<module name="NoWhitespaceBefore">
			<property name="tokens" value="SEMI, DOT, POST_DEC, POST_INC" />
			<property name="allowLineBreaks" value="true" />
		</module>
		
		<module name="OperatorWrap" />
		
		<module name="ParenPad" />
		
		<module name="TypecastParenPad" />
		
		<module name="WhitespaceAfter">
			<property name="tokens" value="COMMA, SEMI, TYPECAST" />
		</module>
		
		<module name="WhitespaceAround">
			<property name="allowEmptyConstructors" value="true" />
			<property name="allowEmptyMethods" value="true" />
			<property name="allowEmptyTypes" value="false" />
			<property name="allowEmptyLoops" value="false" />
			<message key="ws.notFollowed"
				value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)" />
			<message key="ws.notPreceded" value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
			<property name="severity" value="error" />
		</module>
		
		<!-- Checks for Naming Conventions. -->
		<!-- See http://checkstyle.sf.net/config_naming.html -->
		<module name="AbbreviationAsWordInName">
			<property name="tokens" value="VARIABLE_DEF,CLASS_DEF" />
			<property name="ignoreStatic" value="false" />
			<property name="allowedAbbreviationLength" value="1" />
			<property name="allowedAbbreviations" value="XML,URL" />
		</module>
		
		<module name="ConstantName" />
		
		<module name="LocalFinalVariableName" />
		
		<module name="LocalVariableName">
			<property name="allowOneCharVarInForLoop" value="true" />
			<message key="name.invalidPattern" value="Local variable name ''{0}'' must match pattern ''{1}''." />
		</module>
		
		<module name="MemberName" />
		
		<module name="MethodName" />
		
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
			<message key="name.invalidPattern" value="Package name ''{0}'' must match pattern ''{1}''." />
		</module>
		
		<module name="ParameterName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$" />
			<message key="name.invalidPattern" value="Parameter name ''{0}'' must match pattern ''{1}''." />
		</module>
		
		<module name="StaticVariableName" />
		
		<module name="TypeName">
			<message key="name.invalidPattern" value="Type name ''{0}'' must match pattern ''{1}''." />
		</module>
		
		<module name="InterfaceTypeParameterName">
			<property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
			<message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''." />
		</module>
		
		<module name="ClassTypeParameterName">
			<property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
			<message key="name.invalidPattern" value="Class type name ''{0}'' must match pattern ''{1}''." />
		</module>
		
		<module name="MethodTypeParameterName">
			<property name="format" value="^[A-Z][a-zA-Z0-9]*$" />
			<message key="name.invalidPattern" value="Method type name ''{0}'' must match pattern ''{1}''." />
		</module>
		
		<!-- Miscellaneous other checks. -->
		<!-- See http://checkstyle.sourceforge.net/config_misc.html -->
		<module name="ArrayTypeStyle" />
		
		<module name="TodoComment">
			<property name="format" value="(?i)\s+TODO\s+" />
			<property name="severity" value="info" />
		</module>
		
		<module name="TodoComment">
			<property name="format" value="(?i)\s+CR\s+" />
			<property name="severity" value="info" />
		</module>
		
		<module name="UpperEll" />
	</module>

</module>